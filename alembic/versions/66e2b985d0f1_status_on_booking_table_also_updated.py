"""Status on booking table also updated

Revision ID: 66e2b985d0f1
Revises: c8e1e3ecab0d
Create Date: 2025-01-17 23:43:46.741568

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '66e2b985d0f1'
down_revision: Union[str, None] = 'c8e1e3ecab0d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Convert the `status` column to the new enum type with explicit value mapping
    op.execute("""
        ALTER TABLE bookings
        ALTER COLUMN status TYPE bookingstatus
        USING CASE
            WHEN status = 'pending' THEN 'PENDING'::bookingstatus
            WHEN status = 'verified' THEN 'APPROVED'::bookingstatus
            WHEN status = 'rejected' THEN 'CANCELED'::bookingstatus
        END
    """)
    op.alter_column('bookings', 'status',
               existing_type=postgresql.ENUM('pending', 'verified', 'rejected', name='verificationstatus'),
               type_=sa.Enum('PENDING', 'APPROVED', 'CANCELED', name='bookingstatus'),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('bookings', 'status',
               existing_type=sa.Enum('PENDING', 'APPROVED', 'CANCELED', name='bookingstatus'),
               type_=postgresql.ENUM('pending', 'verified', 'rejected', name='verificationstatus'),
               existing_nullable=True)
    # ### end Alembic commands ###
